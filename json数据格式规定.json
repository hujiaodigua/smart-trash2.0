
设备上行数据：
{
	"upv": 1,      // 上行数据格式版本; 8位; java中为byte; c语言中为uint8或unsigned char 
	"type": 0,     // 设备类型; 8位; java中为byte; c语言中为uint8或unsigned char 
	"uuid": 12,    // 设备识别码; 16位;  java中可使用int表示，但是范围受限(0~65535); c语言中为uint16或unsigned short int(具体需要查阅手册，short int不总是16位) 
	"major": 12,   // 设备major号; 同uuid相同
	"check": 32,   // 重传数据校验码 16位; 是每次发送数据都需要生成的随机数；当服务器正确收到数据时需要向设备返回该随机数作为确认标志。
	"info": 1,	   // 上行数据内容
	"xx": xx 	   // 与info值有关
}

[注:]每个设备的唯一id由uuid与major共同指定，建议uuid用来表示设备批次与部署范围，major表示同一范围内不同设备. 设备二维码应该包含此信息
-----------------------------------------------------------
"info" = 1  		//称重数据
"xx": xx 实际为 "weight": 1000 // 设备称重重量; 32位, 单位是克

"info" = 2  		// 心跳包
"xx": xx 实际为 "beat": 1 // 8位;， 心跳包每次加1，加到255重新开始加

=========================================================================================================


服务器下行数据：
{
	"downv": 1.  // 下行数据格式版本
	"info": 1,   // 数据内容编号
	"xx": xx     // 与info值有关
}
downv字段与info字段是必须的，downv字段表明格式版本，info字段指明数据内容版本，其余item与info号相关
-----------------------------------------------------------
"info" = 1  	 // 上行数据确认包
"xx": xx 实际为 "check": 32 

"info" = 2 		// 修改设备量程
"xx": xx 实际为 "range": 1000

"info" = 3 		// 投递完成标志。1-成功， 2-失败
"xx": xx 实际为 "del": 1
